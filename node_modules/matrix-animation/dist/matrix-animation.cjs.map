{"version":3,"file":"matrix-animation.cjs","sources":["../src/main.ts"],"sourcesContent":["import { MatrixOptions, MatrixRaindropOptions } from './types';\n\n\nconst randomInt = (min: number, max: number) => {\n    return Math.floor(Math.random() * (max - min) + min);\n}\n\nconst randomFloat = (min: number, max: number) => {\n    return Math.random() * (max - min) + min;\n}\n\nexport class MatrixAnimation {\n    private container: HTMLElement;\n    private _ctx: CanvasRenderingContext2D;\n    private _canvas: HTMLCanvasElement;\n    get canvas() { return this._canvas; }\n    get ctx() { return this._ctx ?? (this._ctx = this.canvas.getContext('2d')); }\n\n    frameId = 0;\n    fadeInterval = 0;\n    // full screen dimensions\n    canvasWidth = 0;\n    canvasHeight = 0;\n\n    availableCharSets = [];\n    raindrops: MatrixRaindrop[] = [];\n\n    private mutationObserver: MutationObserver;\n    private resizeObserver: ResizeObserver;\n    // Placeholder method that\n    private performCanvasShift: Function = () => { /* NOP */ };\n    // private lastFrameTime = Date.now();\n    public stopAnimation = false; // Interrupt any active animation (used as a safety)\n    private hasCreatedCanvas = false;\n    rainWidth = 0;\n\n    /**\n     * \n     * @param selector CSS Selector or HTML element that we bootstrap the canvas onto\n     * @param options Configuration options\n     */\n    constructor(\n        private selector: string | HTMLElement,\n        public options: MatrixOptions = {}\n    ) {\n        this.applyOptions(options);\n\n        this.setupElements();\n\n        this.resizeObserver = new ResizeObserver(() => this.onResize());\n        this.resizeObserver.observe(this.container);\n\n        // Watch the DOM tree -- if the contianer or canvas is destroyed\n        // then we kill the animation\n        this.mutationObserver = new MutationObserver((mutations) => {\n            mutations.forEach(m => {\n                const removed = [...m.removedNodes.values()];\n                if (removed.includes(this.container) || removed.includes(this.canvas)) {\n                    this.dispose();\n                }\n            })\n        });\n        this.mutationObserver.observe(this.container, { childList: true });\n\n        this.initCanvasShift();\n        this.initCanvas();\n    }\n\n    /**\n     * Remove all event listeners and dispose of all objects from memory.\n     */\n    dispose() {\n        this.pause();\n        this.resizeObserver.disconnect();\n        this.mutationObserver.disconnect();\n\n        this.raindrops.forEach(drop => {\n            \n        });\n\n        if (this.hasCreatedCanvas) {\n            this.canvas.remove();\n        }\n    }\n\n    /**\n     * Resume the animation from the 'paused' state\n     */\n    play() {\n        if (this.fadeInterval) clearInterval(this.fadeInterval);\n        if (this.frameId) cancelAnimationFrame(this.frameId);\n\n        this.stopAnimation = false;\n        this.fadeInterval = setInterval(() => {\n            // Fade everything slightly\n            this.ctx.fillStyle = `rgba(0,0,0,${this.options.fadeStrength ?? 0.05})`;\n            this.ctx.fillRect(0, 0, this.canvasWidth, this.canvasHeight);\n        }, 20);\n        \n        this.render();\n    }\n\n    /**\n     * Pause the animation.\n     */\n    pause() {\n        this.stopAnimation = true;\n        cancelAnimationFrame(this.frameId);\n        clearInterval(this.fadeInterval);\n    }\n\n    applyOptions(options: MatrixOptions = this.options) {\n        if (typeof this.options != \"object\")\n            throw new Error(\"Options must be an object\");\n\n        this.options.minFrameTime = options.minFrameTime ?? 50;\n        this.options.rainGenerator = options.rainGenerator ?? {};\n        this.options.rainGenerator.density = this.options.rainGenerator?.density ?? options.rainGenerator?.density ?? 2;\n\n        if (!Array.isArray(this.options.rainDrop)) {\n            this.options.rainDrop = this.options.rainDrop ?? {};\n            this.rainWidth =\n                this.options.rainDrop.rainWidth =\n                this.options.rainDrop.rainWidth ?? 12;\n            this.options.rainDrop.alignToColumns = this.options.rainDrop.alignToColumns ?? true;\n        }\n        else {\n            this.rainWidth = 12;\n        }\n\n        Object.entries(options)\n            .filter(([key]) => key != \"rainDrop\")\n            .forEach(([key, value]) => this.options[key] = value);\n\n        if (typeof options.rainDrop == \"object\") {\n            Object.entries(options.rainDrop)\n                .forEach(([key, value]) => this.options.rainDrop[key] = value);\n        }\n\n        if (typeof options.rainGenerator == \"object\") {\n            Object.entries(options.rainGenerator)\n                .forEach(([key, value]) => this.options.rainGenerator[key] = value);\n        }\n\n        // Spread operator correctly serializes unicode\n        let arrs = \n            this.options.charArrays\n            ? Array.isArray(this.options.charArrays) \n                ? this.options.charArrays \n                : [this.options.charArrays]\n            : !Array.isArray(this.options.rainDrop)\n                ? this.options.rainDrop.charArrays\n                    ? Array.isArray(this.options.rainDrop.charArrays) \n                        ? this.options.rainDrop.charArrays\n                        : [this.options.rainDrop.charArrays]\n                : [\"0123456789\"]\n                : [\"0123456789\"];\n\n        // console.log(arrs)\n        this.availableCharSets = arrs;\n    }\n\n    /**\n     * Handle resize events.\n     * The component uses a ResizeObserver, so this should rarely need to be called.\n     */\n    onResize(refreshRain = true) {\n        // Negative if shrunk, 0 if unchanged, positive if grown\n        const widthChange = this.container.clientWidth - this.canvasWidth;\n        const heightChange = this.container.clientHeight - this.canvasHeight;\n\n        this.canvas.width = this.canvasWidth = this.container.clientWidth;\n        this.canvas.height = this.canvasHeight = this.container.clientHeight;\n\n        if (refreshRain) {\n            if (widthChange > 0) {\n                this.createRaindrops(true);\n            }\n            if (widthChange < 0) {\n                // Remove all the cut-off rain\n                this.raindrops = this.raindrops.filter(r => r.x < this.canvasWidth);\n            }\n            if (heightChange > 0) {\n                // TBD.\n            }\n            if (heightChange < 0) {\n                // Remove all the cut-off rain\n                this.raindrops = this.raindrops.filter(r => r.x < this.canvasWidth);\n            }\n\n            // this.createRaindrops();\n    \n            // // Preemptively draw the characters\n            // for (let i = 0; i < this.options.warmupIterations; i++)\n            //     this.drawRain();\n        }\n    }\n\n    /**\n     * Reset the raindrops\n     */\n    resetRaindrops() {\n        this.raindrops.splice(0);\n        this.createRaindrops();\n    }\n\n    private setupElements() {\n        if (typeof this.selector == \"string\") {\n            let el = document.querySelector(this.selector);\n            if (!el) {\n                throw new Error(\"No element matching selector \\\"\" + this.selector + \"\\\"\");\n            }\n            if (el.nodeName == \"CANVAS\") {\n                this.container = el.parentElement;\n            }\n            else {\n                this.container = el as HTMLElement;\n            }\n        }\n        else if (this.selector instanceof HTMLElement) {\n            if (this.selector.nodeName == \"CANVAS\") {\n                this.container = this.selector.parentElement;\n            }\n            else {\n                this.container = this.selector as HTMLElement;\n            }\n        }\n        else {\n            const error = new Error(\"Invalid selector passed to MatrixAnimation\");\n            error['selector'] = this.selector;\n            error['options'] = this.options;\n            throw error;\n        }\n\n        let canvas = this.container.querySelector(\"canvas\");\n\n        if (!canvas) {\n            this.hasCreatedCanvas = true;\n            canvas = document.createElement(\"canvas\");\n            this.container.append(canvas);\n        }\n        this._canvas = canvas;\n\n        // TODO: this might need to be changed?\n        if (getComputedStyle(this.container).position == 'static') {\n            this.container.style.position = \"relative\";\n        }\n        canvas.style.width = \"100%\";\n        canvas.style.height = \"100%\";\n        canvas.style.position = \"absolute\";\n    }\n\n    private initCanvasShift() {\n        switch (this.options.windDirection) {\n            case \"LR\": {\n                this.performCanvasShift = () => {\n                    this.ctx.globalCompositeOperation = \"copy\";\n                    this.ctx.drawImage(this.ctx.canvas, this.options.windSpeed, 0);\n                    // reset back to normal for subsequent operations.\n                    this.ctx.globalCompositeOperation = \"source-over\";\n                };\n                break;\n            }\n            case \"BU\": {\n                this.performCanvasShift = () => {\n                    this.ctx.globalCompositeOperation = \"copy\";\n                    this.ctx.drawImage(this.ctx.canvas, 0, -this.options.windSpeed);\n                    // reset back to normal for subsequent operations.\n                    this.ctx.globalCompositeOperation = \"source-over\";\n                };\n                break;\n            }\n            case \"RL\": {\n                this.performCanvasShift = () => {\n                    this.ctx.globalCompositeOperation = \"copy\";\n                    this.ctx.drawImage(this.ctx.canvas, -this.options.windSpeed, 0);\n                    // reset back to normal for subsequent operations.\n                    this.ctx.globalCompositeOperation = \"source-over\";\n                };\n                break;\n            }\n            case \"TD\": {\n                this.performCanvasShift = () => {\n                    this.ctx.globalCompositeOperation = \"copy\";\n                    this.ctx.drawImage(this.ctx.canvas, 0, this.options.windSpeed);\n                    // reset back to normal for subsequent operations.\n                    this.ctx.globalCompositeOperation = \"source-over\";\n                };\n                break;\n            }\n        }\n    }\n\n    private initCanvas() {\n        this.onResize(false);\n\n        this.createRaindrops();\n\n        this.ctx.textAlign = \"center\";\n        this.ctx.imageSmoothingEnabled = false;\n        // Preemptively draw the characters\n        // for (let i = 0; i < this.options.warmupIterations; i++)\n            // this.drawRain();\n    }\n\n    private createRaindrops(add = false) {\n        // If we aren't adding more rain, we're resetting things.\n        if (!add) {\n            this.raindrops.splice(0);\n        }\n\n        if (Array.isArray(this.options.rainDrop)) {\n            // We have an array of preconfigured raindrops\n        }\n        else {\n            const opts = this.options.rainGenerator;\n            const maxColumns = this.canvasWidth / (this.rainWidth);\n\n            let i = opts.count\n                ? opts.count \n                :~~((opts.density ?? 2) * maxColumns);\n            \n            if (Array.isArray(this.options.rainDrop)) \n                throw new Error(\"Cannont set rainDrops when rainGenerator is set\");\n\n            const dropOpts = structuredClone(this.options.rainDrop);\n\n            while (i--) {\n                this.raindrops.push(\n                    new MatrixRaindrop(\n                        (this.options.rainDrop.alignToColumns ?? this.options.alignToColumns)\n                            ? opts.density\n                            ? (randomInt(0, maxColumns) * this.rainWidth)\n                            : (i % maxColumns) * this.rainWidth\n                            : randomFloat(0, this.canvasWidth),\n                        randomFloat(0, this.canvasHeight),\n                        this,\n                        dropOpts\n                    )\n                );\n            }\n        }\n\n        if (this.options.autoStart != false) {\n            this.play();\n        }\n    }\n\n    // Context bound to this class\n    private render = (() => {\n        if (this.stopAnimation) return;\n\n        this.drawRain();\n        this.frameId = requestAnimationFrame(this.render);\n    }).bind(this);\n\n    private drawRain() {\n        let i = this.raindrops.length;\n        const t = Date.now();\n\n        // Call clear before we apply the fade fill\n        this.ctx.shadowColor = this.options.trailBloomColor;\n        this.ctx.shadowBlur = this.options.trailBloomSize;\n        while (i--) {\n            const drop = this.raindrops[i];\n            \n            if (t - drop.lastFrameTime > drop.config.frameDelay) {\n                drop.clear(this.ctx);\n            }\n        }\n        this.ctx.shadowColor = \"\";\n        this.ctx.shadowBlur = 0;\n\n        if (this.options.windSpeed > 0)\n            this.performCanvasShift();\n\n        // Fade everything slightly\n        // this.ctx.fillStyle = `rgba(0,0,0,${this.options.fadeStrength ?? 0.05})`;\n        // this.ctx.fillRect(0, 0, this.canvasWidth, this.canvasHeight);\n\n        i = this.raindrops.length;\n\n        this.ctx.shadowColor = this.options.trailBloomColor;\n        this.ctx.shadowBlur = this.options.trailBloomSize;\n\n        while (i--) {\n            const drop = this.raindrops[i];\n\n            if (t - drop.lastFrameTime > drop.config.frameDelay) {\n                // this.raindrops[i].clear(this.ctx);\n                drop.draw(this.ctx);\n                drop.lastFrameTime = t;\n            }\n        }\n\n        this.ctx.shadowColor = \"\";\n        this.ctx.shadowBlur = 0;\n    }\n}\n\nclass MatrixRaindrop {\n    private charList: string[] = [];\n\n    private trailChars: {\n        x: number,\n        y: number,\n        char: string\n    }[] = [];\n\n    private shiftDirection: Function;\n    private trailLength: number;\n    private font: string;\n    public lastFrameTime = 0;\n\n    constructor(\n        public x: number,\n        public y: number,\n        private matrixAnimation: MatrixAnimation,\n        public config: MatrixRaindropOptions = {}\n    ) {\n        this.initConfig();\n        this.randomizeChars();\n        this.initMoveDirection();\n        this.onRespawn();\n    }\n\n    private initConfig() {\n        Object.keys(this.matrixAnimation).forEach(k => {\n            this.config[k] = this.config[k] ?? this.matrixAnimation[k];\n        });\n\n        this.trailLength = \n            this.matrixAnimation.options.trailColorLogic == \"sequential\" \n            ? (this.config.trailColors ?? []).length \n            : 1//Math.ceil(1 / this.opacity);\n        this.font = \n            (this.config.fontSize ?? 14) + \n            \"px \" + \n            (this.config.fontFamily ?? \"Arial\");\n    }\n\n    initMoveDirection() {\n        const keepBoundsVertically = () => {\n            if (this.x > this.matrixAnimation.canvasWidth) {\n                this.x = 1;\n            }\n            else if (this.x < 0) {\n                this.x = this.matrixAnimation.canvasWidth-1;\n            }\n        }\n        const keepBoundsHorizontally = () => {\n            if (this.y > this.matrixAnimation.canvasHeight) {\n                this.y = 1;\n            }\n            else if (this.y < 0) {\n                this.y = this.matrixAnimation.canvasHeight-1;\n            }\n        }\n\n        switch (this.config.direction) {\n            case \"LR\": {\n                this.shiftDirection = () => {\n                    this.x += (this.config.minMoveSpeed && this.config.maxMoveSpeed)\n                        ? randomFloat(this.config.minMoveSpeed, this.config.maxMoveSpeed)\n                        : (this.matrixAnimation.options.rainWidth ?? 0);\n\n                    if (this.x > this.matrixAnimation.canvasWidth) {\n                        this.randomizeChars();\n\n                        this.x = randomFloat(-100, 0);\n                        this.onRespawn();\n                    }\n                    keepBoundsHorizontally();\n                };\n                break;\n            }\n            case \"BU\": {\n                this.shiftDirection = () => {\n                    this.y -= (this.config.minMoveSpeed && this.config.maxMoveSpeed)\n                        ? randomFloat(this.config.minMoveSpeed, this.config.maxMoveSpeed)\n                        : (this.matrixAnimation.options.rainHeight ?? 0);\n\n                        if (this.y < 0) {\n                        this.randomizeChars();\n\n                        this.y = randomFloat(this.matrixAnimation.canvasHeight, this.matrixAnimation.canvasHeight + 100);\n                        this.onRespawn();\n                    }\n                    keepBoundsVertically();\n                };\n                break;\n            }\n            case \"RL\": {\n                this.shiftDirection = () => {\n                    this.x -= (this.config.minMoveSpeed && this.config.maxMoveSpeed)\n                        ? randomFloat(this.config.minMoveSpeed, this.config.maxMoveSpeed)\n                        : (this.matrixAnimation.options.rainWidth ?? 0);\n\n                    if (this.x < 0) {\n                        this.randomizeChars();\n\n                        this.x = randomFloat(this.matrixAnimation.canvasWidth, this.matrixAnimation.canvasWidth + 100);\n                        this.onRespawn();\n                    }\n                    keepBoundsHorizontally();\n                };\n                break;\n            }\n            case \"TD\":\n            default: {\n                this.shiftDirection = () => {\n                    this.y += (this.config.minMoveSpeed && this.config.maxMoveSpeed)\n                        ? randomFloat(this.config.minMoveSpeed, this.config.maxMoveSpeed)\n                        : (this.matrixAnimation.options.rainHeight ?? 0);\n\n                    if (this.y > this.matrixAnimation.canvasHeight) {\n                        this.randomizeChars();\n\n                        this.y = randomFloat(-100, 0);\n                        this.onRespawn();\n                    }\n                    keepBoundsVertically();\n                };\n                break;\n            }\n        }\n    }\n\n    randomizeChars() {\n        this.charList = this.matrixAnimation.availableCharSets[~~(Math.random() * this.matrixAnimation.availableCharSets.length)];\n    }\n\n    onRespawn() {\n        if (this.matrixAnimation.options.charArrays?.length > 1) {\n            this.randomizeChars();\n        }\n\n        if (this.config.randomizeFrameDelay) {\n            this.config.frameDelay = randomInt(\n                this.config.minFrameDelay ?? 30, \n                this.config.maxFrameDelay ?? 60\n            );\n        }\n\n        // Randomize the position when the drop respawns\n        if (this.config.randomizePosition) {\n            if (this.config.direction == \"LR\" || this.config.direction == \"RL\") {\n                const maxColumns = this.matrixAnimation.canvasHeight / (this.config.rainWidth);\n                if (this.config.alignToColumns)\n                    this.y = (randomInt(0, maxColumns) * this.config.rainWidth);\n                else\n                    this.y = randomFloat(0, this.matrixAnimation.canvasHeight);\n            }\n            else {\n                const maxColumns = this.matrixAnimation.canvasWidth / (this.config.rainWidth);\n                if (this.config.alignToColumns)\n                    this.x = (randomInt(0, maxColumns) * this.config.rainWidth);\n                else\n                    this.x = randomFloat(0, this.matrixAnimation.canvasWidth);\n            }\n        }\n    }\n\n    clear(ctx: CanvasRenderingContext2D) {\n        let i = this.trailChars.length;\n        while (i--) {\n            const char = this.trailChars[i];\n\n            const fill = \n                this.config.trailColors\n                ? this.matrixAnimation.options.trailColorLogic == \"sequential\"\n                    ? (this.config.trailColors[i] ?? this.config.trailColors[this.config.trailColors.length -1])\n                    : this.config.trailColors[randomInt(0, this.config.trailColors.length)]\n                : this.config.trailColor || \"#fff\";\n            ctx.fillStyle = fill;\n            ctx.font = this.font;\n            ctx.fillText(char.char, char.x, char.y);\n        }\n    }\n\n    draw(ctx: CanvasRenderingContext2D) {\n        const char = this.charList[randomInt(0, this.charList.length - 1)];\n\n        this.trailChars.unshift({ char, x: this.x, y: this.y});\n        this.trailChars.splice(this.trailLength);\n\n        ctx.shadowColor = this.matrixAnimation.options.headBloomColor;\n        ctx.shadowBlur = this.matrixAnimation.options.headBloomSize;\n        ctx.fillStyle = this.config.headColor ?? \"rgba(255,255,255,0.8)\";\n        ctx.font = this.font;\n        ctx.fillText(char, this.x, this.y);\n        ctx.shadowColor = \"\";\n        ctx.shadowBlur = 0;\n\n        if (this.config.jitterDownStrength || this.config.jitterUpStrength)\n            this.y += randomFloat(-(this.config.jitterUpStrength ?? 0), this.config.jitterDownStrength ?? 0);\n        if (this.config.jitterLeftStrength || this.config.jitterRightStrength)\n            this.x += randomFloat(-(this.config.jitterLeftStrength ?? 0), this.config.jitterRightStrength ?? 0);\n\n        this.shiftDirection();\n    }\n}"],"names":["randomInt","min","max","randomFloat","MatrixAnimation","selector","options","__publicField","mutations","m","removed","drop","_a","_b","key","value","arrs","refreshRain","widthChange","heightChange","r","el","error","canvas","add","opts","maxColumns","i","dropOpts","MatrixRaindrop","x","y","matrixAnimation","config","k","keepBoundsVertically","keepBoundsHorizontally","ctx","char","fill"],"mappings":"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"}